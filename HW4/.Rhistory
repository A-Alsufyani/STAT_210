v1[1:10]
install.packages("tinytex")
tinytex::install_tinytex()
gc()
data <- read.table("25Fhw4Q1")
mean_emss1 <- mean(data$emss1)
getwd()
setwd("C:/Users/ksa4e/OneDrive/Desktop/KAUST/STAT_210/HW4")
getwd()
data <- read.table("25Fhw4Q1")
mean_emss1 <- mean(data$emss1)
sd_emss1 <- sd(data$emss1)
#creates a histogram of the data in emss1. probability = true normalizes the y axis so the total value in histo = 1.
hist(data$emss1,
probability = TRUE,
main = "CO2 Emissions with New Exhaust System",
xlab = "CO2 Emissions (g/km)",
ylab = "Density",
breaks = seq(min(data$emss1), max(data$emss1) + 4, by = 4)
)
#draw the line of estimated density
lines(density(data$emss1), col = "blue", lwd = 2)
#create a normal density curve
x_vals <- seq(min(data$emss1), max(data$emss1), length = 100)
lines(x_vals, dnorm(x_vals, mean = mean_emss1, sd = sd_emss1),
col = "red", lwd = 2)
#add in a legend for the two lines
legend("topright",
legend = c("Kernel Density", "Normal Density"),
col = c("blue", "red"),
lwd = 2)
#create a Q-Q plot of the data/
library(car)
qqPlot(data$emss1, line = "r", main = "Normal Q-Q Plot for CO2 Emissions")
```
The arguement line = r makes it a robust regression line. which means it becomes more resistant to outlier data. this gives a better visualisation to check normality
alpha <- 0.01
n <- length(data$emss1)
t_critical <- qt(1 - alpha, df = n - 1)
upper_bound <- mean_emss1 + t_critical * sd_emss1 / sqrt(n)
c(-Inf, upper_bound)
t.test(data$emss1,
mu = 191.5,
alternative = "less",
conf.level = 0.99)
t = (mean_emss1 - 191.5) / (sd_emss1 / sqrt(25));
(mean_emss1 - 191.5) / (sd_emss1 / sqrt(25));
t.test(data$emss1, mu = 191.5, alternative = "less", conf.level = 0.99)
View(data)
Assumptions for this test are similar, but the most important difference is it doesn't require approximate normality.
wilcox.test(data$emss1, data$emss2,
alternative = "less",
paired = TRUE,
conf.level = 0.99)
wilcox.test(data$emss1,
mu = 191.5,
alternative = "less",
conf.level = 0.99)
wilcox.test(data$emss1,
mu = 191.5,
alternative = "less",
conf.level = 0.99)
Assumptions for this test are similar, but the most important difference is it doesn't require approximate normality.
wilcox.test(data$emss1,
mu = 191.5,
alternative = "less",
conf.level = 0.99)
data2 <- read.table("25Fhw4Q2")
head(data2)
data2 <- read.table("25Fhw4Q2", header=TRUE)
head(data2)
data2 <- read.table("25Fhw4Q2")
head(data2)
boxplot(data$wt1, data$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("lightblue", "lightgreen"))
data2 <- read.table("25Fhw4Q2")
boxplot(data$wt1, data$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("lightblue", "lightgreen"))
View(data2)
boxplot(data$wt1, data$wt2,
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("lightblue", "lightgreen"))
data2 <- read.table("25Fhw4Q2", header = TRUE)
boxplot(data$wt1, data$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("lightblue", "lightgreen"))
data2 <- read.table("25Fhw4Q2")
boxplot(data2$wt1, data2$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("lightblue", "lightgreen"))
col = c("blue", "green"))
boxplot(data2$wt1, data2$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("blue", "green"))
plot(data2$wt1, data2$wt2,
main = "Before vs After Weight per Rat",
xlab = "Before (wt1)",
ylab = "After (wt2)",
pch = 19, col = "purple")
abline(a = 0, b = 1, col = "red", lwd = 2)
diff <- data2$wt2 - data2$wt1
hist(diff,
main = "Histogram of Weight Changes (After - Before)",
xlab = "Change in Weight (grams)",
col = "lightcoral",
breaks = 8)
abline(v = 0, col = "blue", lwd = 2)
#create a boxplot of the two sets
boxplot(data2$wt1, data2$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("blue", "green"))
#create a plot of the data using wt1 on x and wt2 on y. each rat of the 15 gets one point
plot(data2$wt1, data2$wt2,
main = "Before vs After Weight per Rat",
xlab = "Before (wt1)",
ylab = "After (wt2)",
pch = 19, col = "purple")
#create a line with slope 1 to show the no difference in weight (before = after)
abline(a = 0, b = 1, col = "red", lwd = 2)
#create a boxplot of the two sets
boxplot(data2$wt1, data2$wt2,
names = c("Before", "After"),
main = "Rat Weights Before and After Drug Treatment",
ylab = "Weight (grams)",
col = c("blue", "green"))
#create a plot of the data using wt1 on x and wt2 on y. each rat of the 15 gets one point
plot(data2$wt1, data2$wt2,
main = "Before vs After Weight per Rat",
xlab = "Before (wt1)",
ylab = "After (wt2)",
pch = 19, col = "purple")
#create a line with slope 1 to show the no difference in weight (before = after)
abline(a = 0, b = 1, col = "red", lwd = 2)
qqPlot(data$emss1, line = "r", main = "Normal Q-Q Plot for CO2 Emissions")
diff <- data2$wt2 - data2$wt1
qqPlot(diff, line = "r", main = "Normal Q-Q Plot for CO2 Emissions")
hist(diff,
main = "Histogram of Weight Differences (After - Before)",
xlab = "Weight Difference (g)",
col = "lightblue",
probability = TRUE)
qqPlot(diff, line = "r", main = "Normal Q-Q Plot for CO2 Emissions")
lines(density(diff), col = "red", lwd = 2)
hist(diff,
main = "Histogram of Weight Differences (After - Before)",
xlab = "Weight Difference (g)",
col = "lightblue",
probability = TRUE)
lines(density(diff), col = "red", lwd = 2)
hist(diff,
main = "Histogram of Weight Differences (After - Before)",
xlab = "Weight Difference (g)",
col = "blue",
probability = TRUE)
lines(density(diff), col = "red", lwd = 2)
diff <- data2$wt2 - data2$wt1
qqPlot(diff, line = "r", main = "Normal Q-Q Plot for CO2 Emissions")
qqPlot(diff, line = "r", main = "Normal Q-Q Plot for the difference in rat weight")
Type 1 error (false positive): conclude the drug reduces weight when it doesn't
Type 1 error (false positive): conclude the drug reduces weight when it does not.
Type 2 error (false negative): fail to reject hypothesis and conclude drug has no effect.
```{r}
t.test(data$wt2, data$wt1,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
t.test(data2$wt2, data2$wt1,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
```
t.test(data2$wt2, data2$wt1,
paired = TRUE,
mu = -2,
alternative = "less",
conf.level = 0.99)
wilcox.test(diff, mu = 0,
alternative = "less",
conf.level = 0.99)
wilcox.test(data2$wt2, data2$wt1,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
wilcox.test(data$emss1,
mu = 191.5,
alternative = "less",
conf.level = 0.99)
wilcox.test(data2$wt2, data2$wt1,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
wilcox.test(data2$wt2, data2$wt1,
mu = 0,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
wilcox.test(data2$wt2, data2$wt1,
mu = -2,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
wilcox.test(data2$wt2, data2$wt1,
mu = -2,
paired = TRUE,
alternative = "less",
conf.level = 0.99)
ls
